#ifndef TD3D_H
#define TD3D_H

#include <d3d11.h>
#include <DirectXMath.h>
#include <string>

constexpr const char* PROJECTION_MATRIX_CONSTANT_BUFFER = "PROJECTION_MATRIX_CONSTANT_BUFFER";
constexpr const char* VIEW_MATRIX_CONSTANT_BUFFER = "VIEW_MATRIX_CONSTANT_BUFFER";
constexpr const char* WORLD_MATRIX_CONSTANT_BUFFER = "WORLD_MATRIX_CONSTANT_BUFFER";
constexpr const char* LIGHT_COUNT_CONSTANT_BUFFER = "LIGHT_COUNT_CONSTANT_BUFFER";
constexpr const char* SREEN_QUAD_STATIC_BUFFER = "SREEN_QUAD_STATIC_BUFFER";
constexpr const char* AMBIENT_LIGHT_CONSTANT_BUFFER = "AMBIENT_LIGHT_CONSTANT_BUFFER";
constexpr const char* DIRECTIONAL_LIGHT_CONSTANT_BUFFER = "DIRECTIONAL_LIGHT_CONSTANT_BUFFER";
constexpr const char* LIGHT_VIEW_PROJ_CONSTANT_BUFFER = "LIGHT_VIEW_PROJ_CONSTANT_BUFFER";
constexpr const char* LIGHTS_STRUCTURED_BUFFER = "LIGHTS_STRUCTURED_BUFFER";

struct MatrixCBS
{
    DirectX::XMMATRIX matrix;
};

struct LightCountCBS
{
    int LightCount;
    int padding[3];
};

struct AmbientLightCBS
{
    float r;
    float g;
    float b;
    float padding;
};

struct DirectionalLightCBS
{
    TVector3 direction;
    float intensity;
    TVector3 color;
    float padding;
};


D3D11_INPUT_ELEMENT_DESC SPRITE_INPUT_LAYOUT[] =
{
    { "POSITION", 0, DXGI_FORMAT_R32G32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, 8u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
};

D3D11_INPUT_ELEMENT_DESC GEOMETRY_INPUT_LAYOUT[] =
{
    { "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, 12u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 20u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "TANGENT", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 32u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
};

D3D11_INPUT_ELEMENT_DESC SKYBOX_INPUT_LAYOUT[] =
{
    { "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "TEXCOORD", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 12u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
};

D3D11_INPUT_ELEMENT_DESC SCREEN_QUAD_INPUT_LAYOUT[] =
{
    { "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
    { "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, 12u, D3D11_INPUT_PER_VERTEX_DATA, 0 },
};

#endif
