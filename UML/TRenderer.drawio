<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:133.0) Gecko/20100101 Firefox/133.0" version="25.0.1">
  <diagram name="Страница — 1" id="iS9kPeVT_qTxmNW6HSiJ">
    <mxGraphModel dx="2634" dy="782" grid="1" gridSize="13" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="LnMvlJYZvyKWMzvUD1xX-2" value="TRenderDevice" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-13" y="71" width="741" height="938" as="geometry" />
        </mxCell>
        <mxCell id="LnMvlJYZvyKWMzvUD1xX-3" value="&lt;div&gt;virtual ~TRenderDevice() {};&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual bool Initizialize(HWND hWnd, int width, int height) = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void BeginFrame(float r, float g, float b, float a) = 0;&lt;/div&gt;&lt;div&gt;virtual void EndFrame() = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void Draw(unsigned int numIndices, unsigned int startIndexLocation, unsigned int baseVertexLocation) = 0;&lt;/div&gt;&lt;div&gt;virtual void DrawSprite(unsigned int numVertices, unsigned int startVertexLocation) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void RenderText(const wchar_t* text, float x, float y) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void AddTexture(std::string name, std::string path) = 0;&lt;br&gt;virtual void BindTexture(std::string name) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;virtual void SetProjectionValues(float fovDegrees, float aspectRatio, float nearZ, float farZ) = 0;&lt;br&gt;&lt;div&gt;virtual void SetViewMatrix(const Eigen::Matrix4f&amp;amp; matrix) = 0;&lt;/div&gt;&lt;div&gt;virtual void SetWorldMatrix(const Eigen::Matrix4f&amp;amp; matrix) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void AddTexture(std::string name, std::string path) = 0;&lt;/div&gt;&lt;div&gt;virtual void AddTexture(std::string name, unsigned char* data, int width, int height) = 0;&lt;br&gt;virtual void AddTexture(std::string name, unsigned char* data, size_t dataSize) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void AddTexture(std::string name, unsigned int r, unsigned int g, unsigned int b, unsigned int a) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void AddCubeMapTexture(std::string name, std::string path, std::string ext) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void BindTexture(std::string name) = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void BindVertexShader(std::string name) = 0;&lt;br&gt;virtual void BindPixelShader(std::string name) = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void CreateStaticVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned int vertexSize) = 0;&lt;br&gt;virtual void CreateStaticIndexBuffer(std::string name, unsigned short* indices, unsigned int numIndices) = 0;&lt;/div&gt;&lt;div&gt;virtual void CreateDynamicVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned int vertexSize) = 0;&lt;br&gt;virtual void CreateDynamicIndexBuffer(std::string name, unsigned short* indices, unsigned int numIndices) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void UpdateStaticVertexBuffer(std::string name, void* vertices) = 0;&lt;br&gt;virtual void UpdateStaticIndexBuffer(std::string name, unsigned short* indices) = 0;&lt;/div&gt;&lt;div&gt;virtual void UpdateDynamicVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned short vertexSize) = 0;&lt;br&gt;virtual void UpdateDynamicIndexBuffer(std::string name, unsigned short* indices, unsigned int numIndices) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void BindVertexBuffer(std::string vertexName, UINT stride, UINT offset) = 0;&lt;br&gt;virtual void BindIndexBuffer(std::string indexName) = 0;&lt;br&gt;virtual void DeleteBuffer(std::string name) = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual void SetDepthStencilComparison(bool flag) = 0;&lt;br&gt;virtual void SetRasterizerCulling(bool flag) = 0;&lt;/div&gt;&lt;div&gt;virtual void SetBlendState(bool flag) override;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual unsigned short AddLight(Light light) = 0;&lt;br&gt;virtual void SetAmbientLight(float r, float g, float b) = 0;&lt;br&gt;virtual void RemoveLight(int index) = 0;&lt;br&gt;virtual void FlushLights() = 0;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;virtual bool OnResize(int width, int height) = 0;&lt;/div&gt;&lt;div&gt;virtual bool IsRunning() = 0;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LnMvlJYZvyKWMzvUD1xX-2" vertex="1">
          <mxGeometry y="26" width="741" height="832" as="geometry" />
        </mxCell>
        <mxCell id="LnMvlJYZvyKWMzvUD1xX-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="LnMvlJYZvyKWMzvUD1xX-2" vertex="1">
          <mxGeometry y="858" width="741" height="8" as="geometry" />
        </mxCell>
        <mxCell id="LnMvlJYZvyKWMzvUD1xX-5" value="&lt;div&gt;HWND hwnd;&lt;br&gt;&lt;/div&gt;&lt;div&gt;bool m_IsRunning;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="LnMvlJYZvyKWMzvUD1xX-2" vertex="1">
          <mxGeometry y="866" width="741" height="72" as="geometry" />
        </mxCell>
        <mxCell id="LnMvlJYZvyKWMzvUD1xX-13" value="" style="endArrow=block;dashed=1;endFill=0;endSize=12;html=1;rounded=0;entryX=0.372;entryY=0.997;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.471;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="cNzNoUKR5_ti7T2eS_Fg-1" target="LnMvlJYZvyKWMzvUD1xX-5" edge="1">
          <mxGeometry width="160" relative="1" as="geometry">
            <mxPoint x="319" y="529" as="sourcePoint" />
            <mxPoint x="500" y="320" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-1" value="TDXRenderDevice" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="39" y="1092" width="585" height="702" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-2" value="&lt;div&gt;TDXRenderDevice();&lt;/div&gt;&lt;div&gt;~TDXRenderDevice();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void UpdateLights();&lt;br&gt;&lt;/div&gt;&lt;div&gt;void CreateBuffers();&lt;/div&gt;&lt;div&gt;void AddShaders();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HRESULT CreatetRenderDevice(TRenderDevice** pInterface);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;HRESULT ReleaseRenderDevice(TRenderDevice** pInterface);&lt;br&gt;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="cNzNoUKR5_ti7T2eS_Fg-1" vertex="1">
          <mxGeometry y="26" width="585" height="169" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="cNzNoUKR5_ti7T2eS_Fg-1" vertex="1">
          <mxGeometry y="195" width="585" height="8" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-4" value="&lt;div&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11Device&amp;gt; m_pDevice; Microsoft::WRL::ComPtr&amp;lt;ID3D11DeviceContext&amp;gt; m_pDeviceContext; Microsoft::WRL::ComPtr&amp;lt;IDXGISwapChain&amp;gt; m_pSwapChain; Microsoft::WRL::ComPtr&amp;lt;ID3D11RenderTargetView&amp;gt; m_pRenderTargetView; Microsoft::WRL::ComPtr&amp;lt;ID3D11DepthStencilView&amp;gt; m_pDepthStencilView; Microsoft::WRL::ComPtr&amp;lt;ID3D11Texture2D&amp;gt; m_pDepthStencilBuffer;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11Texture2D&amp;gt; m_pGBuffer[4];&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11RenderTargetView&amp;gt; m_pGBufferRTV[4];&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11ShaderResourceView&amp;gt; m_pGBufferSRV[4];&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11ShaderResourceView&amp;gt; m_pLightsShaderResource;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11Buffer&amp;gt; m_pLightsBuffer;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;DirectX::XMMATRIX m_ViewMatrix;&lt;br&gt;&lt;div&gt;DirectX::XMMATRIX m_ProjectionMatrix;&lt;/div&gt;&lt;div&gt;DirectX::XMMATRIX m_WorldMatrix;&lt;br&gt;&lt;/div&gt;&lt;br&gt;MatrixCBS m_ViewMatrixCBS;&lt;br&gt;&lt;div&gt;MatrixCBS m_ProjectionMatrixCBS;&lt;/div&gt;&lt;div&gt;MatrixCBS m_WorldMatrixCBS;&lt;br&gt;&lt;/div&gt;&lt;br&gt;TDXShaderManager m_TDXShaderManager;&lt;br&gt;TDXTextureManager m_TDXTextureManager;&lt;br&gt;TDXFeatureController m_TDXFeatureController;&lt;br&gt;&lt;div&gt;TDXBufferManager m_TDXBufferManager;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;std::unique_ptr&amp;lt;DirectX::SpriteBatch&amp;gt; m_pSpriteBatch;&lt;br&gt;std::unique_ptr&amp;lt;DirectX::SpriteFont&amp;gt; m_pSpriteFont;&lt;br&gt;&lt;br&gt;std::vector&amp;lt;Light&amp;gt; m_Lights;&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="cNzNoUKR5_ti7T2eS_Fg-1" vertex="1">
          <mxGeometry y="203" width="585" height="499" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-5" value="TRenderer" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="871" y="71" width="273" height="260" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-6" value="&lt;div&gt;TRenderer(HINSTANCE instance);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;HRESULT CreateDevice(const char* chAPI);&lt;/div&gt;&lt;div&gt;TRenderDevice* GetDevice();&lt;/div&gt;&lt;div&gt;HINSTANCE GetModule();&lt;/div&gt;&lt;div&gt;void Release();&lt;br&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="cNzNoUKR5_ti7T2eS_Fg-5" vertex="1">
          <mxGeometry y="26" width="273" height="130" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-7" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="cNzNoUKR5_ti7T2eS_Fg-5" vertex="1">
          <mxGeometry y="156" width="273" height="8" as="geometry" />
        </mxCell>
        <mxCell id="cNzNoUKR5_ti7T2eS_Fg-8" value="ZFXRenderDevice* m_pDevice;&lt;br&gt;HINSTANCE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; m_hInst;&lt;br&gt;HMODULE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; m_hDLL;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="cNzNoUKR5_ti7T2eS_Fg-5" vertex="1">
          <mxGeometry y="164" width="273" height="96" as="geometry" />
        </mxCell>
        <mxCell id="Nmb29etkxSLf_LVVn4ak-1" value="TDXShaderManager" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-689" y="676" width="637" height="364" as="geometry" />
        </mxCell>
        <mxCell id="Nmb29etkxSLf_LVVn4ak-2" value="&lt;div&gt;TDXShaderManager();&lt;/div&gt;&lt;div&gt;~TDXShaderManager();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void AddVertexShader(std::string name, LPCWSTR path, D3D11_INPUT_ELEMENT_DESC* ied, UINT size, ID3D11Device* device);&lt;/div&gt;&lt;div&gt;void AddPixelShader(std::string name, LPCWSTR pathPixel, ID3D11Device* device);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void BindVertexShader(std::string name, ID3D11DeviceContext* deviceContext);&lt;/div&gt;&lt;div&gt;void BindPixelShader(std::string name, ID3D11DeviceContext* deviceContext);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;ID3D11VertexShader* GetVertexShader(std::string name);&lt;/div&gt;&lt;div&gt;ID3D11PixelShader* GetPixelShader(std::string name);&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Nmb29etkxSLf_LVVn4ak-1" vertex="1">
          <mxGeometry y="26" width="637" height="208" as="geometry" />
        </mxCell>
        <mxCell id="Nmb29etkxSLf_LVVn4ak-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="Nmb29etkxSLf_LVVn4ak-1" vertex="1">
          <mxGeometry y="234" width="637" height="8" as="geometry" />
        </mxCell>
        <mxCell id="Nmb29etkxSLf_LVVn4ak-4" value="&lt;div&gt;std::unordered_map&amp;lt;std::string, ID3D11VertexShader*&amp;gt; m_VertexShadersMap;&lt;/div&gt;&lt;div&gt;&lt;div&gt;std::unordered_map&amp;lt;std::string, ID3D11PixelShader*&amp;gt; m_PixelShadersMap;&lt;/div&gt;&lt;div&gt;&lt;div&gt;std::unordered_map&amp;lt;std::string, ID3D11InputLayout&amp;gt; m_InputLayoutsMap;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Microsoft::WRL::ComPtr &amp;lt;ID3DBlob&amp;gt; m_pBlob;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="Nmb29etkxSLf_LVVn4ak-1" vertex="1">
          <mxGeometry y="242" width="637" height="122" as="geometry" />
        </mxCell>
        <mxCell id="j0UoL_jZY-VV4XArSAp1-1" value="&lt;div&gt;TDXTextureManager&lt;/div&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-832" y="130" width="741" height="416" as="geometry" />
        </mxCell>
        <mxCell id="j0UoL_jZY-VV4XArSAp1-2" value="&lt;div&gt;TDXTexutureManager();&lt;/div&gt;&lt;div&gt;~TDXTextureManager();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void CreateSampler(ID3D11Device* device, ID3D11DeviceContext* context);&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void AddTexture(std::string name, std::string path, ID3D11Device* device);&lt;/div&gt;&lt;div&gt;void AddTexture(std::string name, unsigned char* data, int width, int height, ID3D11Device* device);&lt;br&gt;void AddTexture(std::string name, unsigned char* data, size_t dataSize, ID3D11Device* device);&lt;br&gt;&lt;/div&gt;&lt;div&gt;void AddTexture(std::string name, unsigned int r, unsigned int g, unsigned int b, unsigned int a, ID3D11Device* device);&lt;br&gt;&lt;/div&gt;&lt;div&gt;void AddCubeMapTexture(std::string name, std::string path, std::string ext, ID3D11Device* device);&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void BindTexture(std::string name, ID3D11DeviceContext* context);&lt;/div&gt;&lt;div&gt;void BindSampler(std::string name, ID3D11DeviceContext* context);&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void DeleteTexture(std::string name);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;ID3D11Texture2D* CreateTextureFromData(ID3D11Device* device, unsigned char* data, int width, int height);&lt;br&gt;&lt;/div&gt;&lt;div&gt;unsigned char* LoadCubeMapTextureData(const std::string&amp;amp; filename, int&amp;amp; width, int&amp;amp; height, int&amp;amp; channels);&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="j0UoL_jZY-VV4XArSAp1-1" vertex="1">
          <mxGeometry y="26" width="741" height="312" as="geometry" />
        </mxCell>
        <mxCell id="j0UoL_jZY-VV4XArSAp1-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="j0UoL_jZY-VV4XArSAp1-1" vertex="1">
          <mxGeometry y="338" width="741" height="8" as="geometry" />
        </mxCell>
        <mxCell id="j0UoL_jZY-VV4XArSAp1-4" value="std::unordered_map&amp;lt;std::string, ID3D11SamplerState*&amp;gt; m_SamplersMap;&lt;br&gt;&lt;div&gt;std::unordered_map&amp;lt;std::string, ID3D11ShaderResourceView*&amp;gt; m_TexturesMap;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="j0UoL_jZY-VV4XArSAp1-1" vertex="1">
          <mxGeometry y="346" width="741" height="70" as="geometry" />
        </mxCell>
        <mxCell id="85-j-p2QJw2XKJVX7Edh-1" value="TDXFeatureController" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="845" y="442" width="637" height="377" as="geometry" />
        </mxCell>
        <mxCell id="85-j-p2QJw2XKJVX7Edh-2" value="&lt;div&gt;&lt;span class=&quot;hljs-type&quot;&gt;void Initizialize(ID3D11Device* device);&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;hljs-type&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;void ChangeDepthStencilComparison(bool flag, ID3D11DeviceContext* deviceContext);&lt;br&gt;void ChangeRasterizerCulling(bool flag, ID3D11DeviceContext* deviceContext);&lt;br&gt;void ChangeBlendState(bool flag, ID3D11DeviceContext* deviceContext);&lt;div&gt;&lt;span class=&quot;hljs-params&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;hljs-params&quot;&gt;void CreateDepthStencilComparisons(ID3D11Device* device);&lt;br&gt;void CreateRasterizerCullings(ID3D11Device* device);&lt;br&gt;void CreateBlendStates(ID3D11Device* device);&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="85-j-p2QJw2XKJVX7Edh-1" vertex="1">
          <mxGeometry y="26" width="637" height="195" as="geometry" />
        </mxCell>
        <mxCell id="85-j-p2QJw2XKJVX7Edh-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="85-j-p2QJw2XKJVX7Edh-1" vertex="1">
          <mxGeometry y="221" width="637" height="8" as="geometry" />
        </mxCell>
        <mxCell id="85-j-p2QJw2XKJVX7Edh-4" value="Microsoft::WRL::ComPtr&amp;lt;ID3D11DepthStencilState&amp;gt; m_pDepthEnable;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11DepthStencilState&amp;gt; m_pDepthDisable;&lt;br&gt;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11RasterizerState&amp;gt; m_pRasterizerStateEnable;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11RasterizerState&amp;gt; m_pRasterizerStateDisable;&lt;br&gt;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11BlendState&amp;gt; m_pBlendStateEnable;&lt;br&gt;Microsoft::WRL::ComPtr&amp;lt;ID3D11BlendState&amp;gt; m_pBlendStateDisable;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="85-j-p2QJw2XKJVX7Edh-1" vertex="1">
          <mxGeometry y="229" width="637" height="148" as="geometry" />
        </mxCell>
        <mxCell id="zGQ5QOaMirLtcjMx9zrs-1" value="TDXBufferManager" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="702" y="1040" width="949" height="559" as="geometry" />
        </mxCell>
        <mxCell id="zGQ5QOaMirLtcjMx9zrs-2" value="~TDXBufferManager();&lt;br&gt;&lt;br&gt;void CreateStaticVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned int vertexSize, ID3D11Device* device);&lt;br&gt;&lt;div&gt;void CreateStaticIndexBuffer(std::string name, unsigned&amp;nbsp;int * indices, unsigned int numIndices, ID3D11Device* device);&lt;/div&gt;&lt;div&gt;void CreateDynamicConstantBuffer(std::string name, unsigned int structSize, ID3D11Device* device)&lt;/div&gt;&lt;div&gt;void CreateDynamicVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned int vertexSize, ID3D11Device* device);&lt;br&gt;void CreateDynamicIndexBuffer(std::string name, unsigned&amp;nbsp;int * indices, unsigned int numIndices, ID3D11Device* device);&lt;/div&gt;&lt;div&gt;void CreateDynamicStructuredBuffer(std::string name, unsigned int structSize, unsigned int structCount, ID3D11Device* device);&lt;br&gt;&lt;/div&gt;&lt;br&gt;void UpdateStaticVertexBuffer(std::string name, void* vertices, ID3D11DeviceContext* context);&lt;br&gt;&lt;div&gt;void UpdateStaticIndexBuffer(std::string name, unsigned&amp;nbsp;int * indices, ID3D11DeviceContext* context);&lt;/div&gt;&lt;div&gt;void UpdateDynamicConstantBuffer(std::string name, void* constantBufferStruct, unsigned int structSize, ID3D11DeviceContext* context);&lt;/div&gt;&lt;div&gt;void UpdateDynamicVertexBuffer(std::string name, void* vertices, unsigned int numVertices, unsigned int vertexSize, ID3D11DeviceContext* context);&lt;br&gt;void UpdateDynamicIndexBuffer(std::string name, unsigned&amp;nbsp;int * indices, unsigned int numIndices, ID3D11DeviceContext* context);&lt;/div&gt;&lt;div&gt;void UpdateDynamicStructuredBuffer(std::string name, void* structuredBufferStruct, unsigned int structSize, unsigned int structCount, ID3D11DeviceContext* context);&lt;br&gt;&lt;/div&gt;&lt;br&gt;void BindVertexBuffer(std::string vertexName, UINT stride, UINT offset, ID3D11DeviceContext* context);&lt;br&gt;&lt;div&gt;void BindIndexBuffer(std::string indexName, ID3D11DeviceContext* context);&lt;/div&gt;&lt;div&gt;void VBindConstantBuffer(std::string constantName, unsigned int slot, ID3D11DeviceContext* context);&lt;br&gt;void PBindConstantBuffer(std::string constantName, unsigned int slot, ID3D11DeviceContext* context);&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;ID3D11Buffer* GetBuffer(std::string name);&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;void DeleteBuffer(std::string name);" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zGQ5QOaMirLtcjMx9zrs-1" vertex="1">
          <mxGeometry y="26" width="949" height="468" as="geometry" />
        </mxCell>
        <mxCell id="zGQ5QOaMirLtcjMx9zrs-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="zGQ5QOaMirLtcjMx9zrs-1" vertex="1">
          <mxGeometry y="494" width="949" height="8" as="geometry" />
        </mxCell>
        <mxCell id="zGQ5QOaMirLtcjMx9zrs-4" value="&lt;div&gt;std::unordered_map&amp;lt;std::string, ID3D11Buffer*&amp;gt; m_BuffersMap;&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="zGQ5QOaMirLtcjMx9zrs-1" vertex="1">
          <mxGeometry y="502" width="949" height="57" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
